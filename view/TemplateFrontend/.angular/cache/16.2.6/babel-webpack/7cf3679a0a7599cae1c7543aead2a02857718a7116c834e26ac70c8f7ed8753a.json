{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./template.service\";\nexport class TemplateComponent {\n  constructor(templateService) {\n    this.templateService = templateService;\n    this.uploadedData = [];\n    this.fileToUpload = null;\n  }\n  ngOnInit() {\n    // this.refreshTable();\n  }\n  handleFileInput(files) {\n    // Use the non-null assertion operator\n    this.fileToUpload = files.item(0);\n  }\n  uploadTemplate() {\n    if (this.fileToUpload) {\n      this.templateService.uploadTemplate(this.fileToUpload).subscribe(() => {\n        this.refreshTable();\n      });\n    }\n  }\n  downloadTemplate() {\n    this.templateService.downloadTemplate().subscribe(data => {\n      // Assuming data is a Blob\n      const blob = new Blob([data], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      const url = window.URL.createObjectURL(blob);\n      // Create a link element and click it to trigger the download\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'template.xlsx';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    });\n  }\n  refreshTable() {\n    this.templateService.getUploadedData().subscribe(data => {\n      this.uploadedData = data;\n    });\n  }\n  static #_ = this.ɵfac = function TemplateComponent_Factory(t) {\n    return new (t || TemplateComponent)(i0.ɵɵdirectiveInject(i1.TemplateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplateComponent,\n    selectors: [[\"app-template\"]],\n    decls: 9,\n    vars: 0,\n    consts: [[3, \"click\"]],\n    template: function TemplateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Template Screen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function TemplateComponent_Template_button_click_3_listener() {\n          return ctx.downloadTemplate();\n        });\n        i0.ɵɵtext(4, \"Download Template\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\")(6, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function TemplateComponent_Template_button_click_6_listener() {\n          return ctx.uploadTemplate();\n        });\n        i0.ɵɵtext(7, \"Upload Template\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"div\");\n      }\n    },\n    styles: [\"\\n\\nh2[_ngcontent-%COMP%] {\\n    color: rgb(0, 0, 0);\\n    font-size: 34px;\\n    margin-bottom: 20px;\\n    text-align: center;\\n  }\\n  \\n  \\n\\n\\n\\n  \\n  button[_ngcontent-%COMP%] {\\n    padding: 10px 16px;\\n    font-size: 14px;\\n    cursor: pointer;\\n\\n  }\\n  \\n  table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    margin-top: 20px;\\n    border-collapse: collapse;\\n  }\\n  \\n  th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n    padding: 12px;\\n    border: 1px solid #ddd;\\n    text-align: left;\\n  }\\n  \\n  th[_ngcontent-%COMP%] {\\n    background-color: #2187e7;\\n  }\\n  \\n  \\n\\n  tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover {\\n    background-color: #247de2;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVtcGxhdGUvdGVtcGxhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkI7QUFDM0I7SUFDSSxtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLG1CQUFtQjtJQUNuQixrQkFBa0I7RUFDcEI7O0VBRUE7O0tBRUc7O0VBRUg7SUFDRSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGVBQWU7O0VBRWpCOztFQUVBO0lBQ0UsV0FBVztJQUNYLGdCQUFnQjtJQUNoQix5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQSw2REFBNkQ7RUFDN0Q7SUFDRSx5QkFBeUI7RUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiB0ZW1wbGF0ZS5jb21wb25lbnQuY3NzICovXHJcbmgyIHtcclxuICAgIGNvbG9yOiByZ2IoMCwgMCwgMCk7XHJcbiAgICBmb250LXNpemU6IDM0cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBcclxuICAvKiBpbnB1dFt0eXBlPVwiZmlsZVwiXSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgfSAqL1xyXG4gIFxyXG4gIGJ1dHRvbiB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE2cHg7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gIH1cclxuICBcclxuICB0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gIH1cclxuICBcclxuICB0aCwgdGQge1xyXG4gICAgcGFkZGluZzogMTJweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIH1cclxuICBcclxuICB0aCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE4N2U3O1xyXG4gIH1cclxuICBcclxuICAvKiBPcHRpb25hbDogQWRkIHNvbWUgc3BhY2luZyBhbmQgc3R5bGluZyB0byB0aGUgdGFibGUgcm93cyAqL1xyXG4gIHRib2R5IHRyOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDdkZTI7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["TemplateComponent","constructor","templateService","uploadedData","fileToUpload","ngOnInit","handleFileInput","files","item","uploadTemplate","subscribe","refreshTable","downloadTemplate","data","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","getUploadedData","_","i0","ɵɵdirectiveInject","i1","TemplateService","_2","selectors","decls","vars","consts","template","TemplateComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TemplateComponent_Template_button_click_3_listener","TemplateComponent_Template_button_click_6_listener","ɵɵelement"],"sources":["D:\\Template\\src\\app\\template\\template.component.ts","D:\\Template\\src\\app\\template\\template.component.html"],"sourcesContent":["// template.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { TemplateService } from './template.service';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.css'],\n})\nexport class TemplateComponent implements OnInit {\n  uploadedData: any[] = [];\n  fileToUpload: File | null = null;\n\n  constructor(private templateService: TemplateService) {}\n\n  ngOnInit(): void {\n    // this.refreshTable();\n  }\n\n  handleFileInput(files: FileList | null): void {\n    // Use the non-null assertion operator\n    this.fileToUpload = files!.item(0);\n  }\n  \n\n  uploadTemplate(): void {\n    if (this.fileToUpload) {\n      this.templateService.uploadTemplate(this.fileToUpload).subscribe(() => {\n        this.refreshTable();\n      });\n    }\n  }\n\n  downloadTemplate(): void {\n    this.templateService.downloadTemplate().subscribe((data) => {\n      // Assuming data is a Blob\n      const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n      const url = window.URL.createObjectURL(blob);\n\n      // Create a link element and click it to trigger the download\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'template.xlsx';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    });\n  }\n\n  refreshTable(): void {\n    this.templateService.getUploadedData().subscribe((data) => {\n      this.uploadedData = data;\n    });\n  }\n}\n","<h2>Template Screen</h2>\n\n<div>\n    <button (click)=\"downloadTemplate()\">Download Template</button>\n</div>\n\n<div>\n    <!-- <input type=\"file\" (change)=\"handleFileInput($event.target.files)\" /> -->\n<button (click)=\"uploadTemplate()\">Upload Template</button>\n</div>\n\n<div>\n\n</div>\n\n\n"],"mappings":";;AASA,OAAM,MAAOA,iBAAiB;EAI5BC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IAHnC,KAAAC,YAAY,GAAU,EAAE;IACxB,KAAAC,YAAY,GAAgB,IAAI;EAEuB;EAEvDC,QAAQA,CAAA;IACN;EAAA;EAGFC,eAAeA,CAACC,KAAsB;IACpC;IACA,IAAI,CAACH,YAAY,GAAGG,KAAM,CAACC,IAAI,CAAC,CAAC,CAAC;EACpC;EAGAC,cAAcA,CAAA;IACZ,IAAI,IAAI,CAACL,YAAY,EAAE;MACrB,IAAI,CAACF,eAAe,CAACO,cAAc,CAAC,IAAI,CAACL,YAAY,CAAC,CAACM,SAAS,CAAC,MAAK;QACpE,IAAI,CAACC,YAAY,EAAE;MACrB,CAAC,CAAC;;EAEN;EAEAC,gBAAgBA,CAAA;IACd,IAAI,CAACV,eAAe,CAACU,gBAAgB,EAAE,CAACF,SAAS,CAAEG,IAAI,IAAI;MACzD;MACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,IAAI,CAAC,EAAE;QAAEG,IAAI,EAAE;MAAmE,CAAE,CAAC;MAC5G,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;MAE5C;MACA,MAAMO,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACrCF,CAAC,CAACG,IAAI,GAAGP,GAAG;MACZI,CAAC,CAACI,QAAQ,GAAG,eAAe;MAC5BH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,CAAC,CAAC;MAC5BA,CAAC,CAACO,KAAK,EAAE;MACTN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,CAAC,CAAC;MAC5BH,MAAM,CAACC,GAAG,CAACW,eAAe,CAACb,GAAG,CAAC;IACjC,CAAC,CAAC;EACJ;EAEAN,YAAYA,CAAA;IACV,IAAI,CAACT,eAAe,CAAC6B,eAAe,EAAE,CAACrB,SAAS,CAAEG,IAAI,IAAI;MACxD,IAAI,CAACV,YAAY,GAAGU,IAAI;IAC1B,CAAC,CAAC;EACJ;EAAC,QAAAmB,CAAA,G;qBA7CUhC,iBAAiB,EAAAiC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBrC,iBAAiB;IAAAsC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT9BX,EAAA,CAAAa,cAAA,SAAI;QAAAb,EAAA,CAAAc,MAAA,sBAAe;QAAAd,EAAA,CAAAe,YAAA,EAAK;QAExBf,EAAA,CAAAa,cAAA,UAAK;QACOb,EAAA,CAAAgB,UAAA,mBAAAC,mDAAA;UAAA,OAASL,GAAA,CAAAjC,gBAAA,EAAkB;QAAA,EAAC;QAACqB,EAAA,CAAAc,MAAA,wBAAiB;QAAAd,EAAA,CAAAe,YAAA,EAAS;QAGnEf,EAAA,CAAAa,cAAA,UAAK;QAEGb,EAAA,CAAAgB,UAAA,mBAAAE,mDAAA;UAAA,OAASN,GAAA,CAAApC,cAAA,EAAgB;QAAA,EAAC;QAACwB,EAAA,CAAAc,MAAA,sBAAe;QAAAd,EAAA,CAAAe,YAAA,EAAS;QAG3Df,EAAA,CAAAmB,SAAA,UAEM"},"metadata":{},"sourceType":"module","externalDependencies":[]}